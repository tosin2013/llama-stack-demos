apiVersion: apps/v1
kind: Deployment
metadata:
  name: milvus
  namespace: workshop-system
  labels:
    app: milvus
    component: vector-database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: milvus
  template:
    metadata:
      labels:
        app: milvus
        component: vector-database
    spec:
      serviceAccountName: workshop-system-sa
      containers:
      - name: milvus
        image: milvusdb/milvus:v2.3.0
        command: ["milvus", "run", "standalone"]
        ports:
        - containerPort: 19530
          name: milvus
        - containerPort: 9091
          name: metrics
        env:
        - name: ETCD_ENDPOINTS
          value: "etcd:2379"
        - name: MINIO_ADDRESS
          value: "minio:9000"
        - name: MINIO_ACCESS_KEY
          value: "minioadmin"
        - name: MINIO_SECRET_KEY
          value: "minioadmin"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "4Gi"
            cpu: "2"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9091
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /healthz
            port: 9091
          initialDelaySeconds: 30
          periodSeconds: 10
        volumeMounts:
        - name: milvus-data
          mountPath: /var/lib/milvus
      volumes:
      - name: milvus-data
        persistentVolumeClaim:
          claimName: milvus-data-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: milvus-data-pvc
  namespace: workshop-system
  labels:
    app: milvus
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: etcd
  namespace: workshop-system
  labels:
    app: etcd
    component: metadata-store
spec:
  replicas: 1
  selector:
    matchLabels:
      app: etcd
  template:
    metadata:
      labels:
        app: etcd
        component: metadata-store
    spec:
      serviceAccountName: workshop-system-sa
      containers:
      - name: etcd
        image: quay.io/coreos/etcd:v3.5.0
        ports:
        - containerPort: 2379
          name: client
        - containerPort: 2380
          name: peer
        env:
        - name: ETCD_AUTO_COMPACTION_MODE
          value: "revision"
        - name: ETCD_AUTO_COMPACTION_RETENTION
          value: "1000"
        - name: ETCD_QUOTA_BACKEND_BYTES
          value: "4294967296"
        - name: ETCD_SNAPSHOT_COUNT
          value: "50000"
        command:
        - /usr/local/bin/etcd
        - --data-dir=/etcd-data
        - --name=node1
        - --initial-advertise-peer-urls=http://0.0.0.0:2380
        - --listen-peer-urls=http://0.0.0.0:2380
        - --advertise-client-urls=http://0.0.0.0:2379
        - --listen-client-urls=http://0.0.0.0:2379
        - --initial-cluster=node1=http://0.0.0.0:2380
        - --initial-cluster-state=new
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: etcd-data
          mountPath: /etcd-data
      volumes:
      - name: etcd-data
        persistentVolumeClaim:
          claimName: etcd-data-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: etcd-data-pvc
  namespace: workshop-system
  labels:
    app: etcd
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: workshop-system
  labels:
    app: minio
    component: object-storage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
        component: object-storage
    spec:
      serviceAccountName: workshop-system-sa
      containers:
      - name: minio
        image: minio/minio:RELEASE.2023-03-20T20-16-18Z
        ports:
        - containerPort: 9000
          name: api
        - containerPort: 9001
          name: console
        env:
        - name: MINIO_ACCESS_KEY
          value: "minioadmin"
        - name: MINIO_SECRET_KEY
          value: "minioadmin"
        command:
        - /bin/bash
        - -c
        args:
        - minio server /data --console-address :9001
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: minio-data
          mountPath: /data
      volumes:
      - name: minio-data
        persistentVolumeClaim:
          claimName: minio-data-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-data-pvc
  namespace: workshop-system
  labels:
    app: minio
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
