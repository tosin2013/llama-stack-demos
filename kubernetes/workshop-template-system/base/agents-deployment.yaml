apiVersion: apps/v1
kind: Deployment
metadata:
  name: workshop-chat-agent
  namespace: workshop-system
  labels:
    app: workshop-chat-agent
    component: workshop-agent
spec:
  replicas: 2
  selector:
    matchLabels:
      app: workshop-chat-agent
  template:
    metadata:
      labels:
        app: workshop-chat-agent
        component: workshop-agent
    spec:
      serviceAccountName: workshop-system-sa
      containers:
      - name: workshop-chat-agent
        image: image-registry.openshift-image-registry.svc:5000/workshop-system/workshop-agent-system:latest
        command: ["python", "-m", "demos.workshop_template_system", "--agent-name", "workshop_chat", "--port", "8080"]
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: AGENT_NAME
          value: "workshop_chat"
        - name: AGENT_PORT
          value: "8080"
        - name: LLAMA_STACK_ENDPOINT
          value: "http://llamastack-server.llama-serve.svc.cluster.local:8321"
        - name: INFERENCE_MODEL_ID
          value: "meta-llama/Llama-3.2-3B-Instruct"
        - name: MILVUS_ENDPOINT
          value: "http://milvus:19530"
        - name: RAG_ENABLED
          value: "true"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /agent-card
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /agent-card
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /opt/app-root/src/config
      volumes:
      - name: config-volume
        configMap:
          name: workshop-system-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: template-converter-agent
  namespace: workshop-system
  labels:
    app: template-converter-agent
    component: workshop-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: template-converter-agent
  template:
    metadata:
      labels:
        app: template-converter-agent
        component: workshop-agent
    spec:
      serviceAccountName: workshop-system-sa
      containers:
      - name: template-converter-agent
        image: image-registry.openshift-image-registry.svc:5000/workshop-system/workshop-agent-system:latest
        command: ["python", "-m", "demos.workshop_template_system", "--agent-name", "template_converter", "--port", "8080"]
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: AGENT_NAME
          value: "template_converter"
        - name: AGENT_PORT
          value: "8080"
        - name: LLAMA_STACK_ENDPOINT
          value: "http://llamastack-server.llama-serve.svc.cluster.local:8321"
        - name: INFERENCE_MODEL_ID
          value: "meta-llama/Llama-3.2-3B-Instruct"
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: workshop-system-secrets
              key: GITHUB_TOKEN
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /agent-card
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /agent-card
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /opt/app-root/src/config
      volumes:
      - name: config-volume
        configMap:
          name: workshop-system-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: content-creator-agent
  namespace: workshop-system
  labels:
    app: content-creator-agent
    component: workshop-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: content-creator-agent
  template:
    metadata:
      labels:
        app: content-creator-agent
        component: workshop-agent
    spec:
      serviceAccountName: workshop-system-sa
      containers:
      - name: content-creator-agent
        image: image-registry.openshift-image-registry.svc:5000/workshop-system/workshop-agent-system:latest
        command: ["python", "-m", "demos.workshop_template_system", "--agent-name", "content_creator", "--port", "8080"]
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: AGENT_NAME
          value: "content_creator"
        - name: AGENT_PORT
          value: "8080"
        - name: LLAMA_STACK_ENDPOINT
          value: "http://llamastack-server.llama-serve.svc.cluster.local:8321"
        - name: INFERENCE_MODEL_ID
          value: "meta-llama/Llama-3.2-3B-Instruct"
        - name: WORKSPACE_PATH
          value: "/workspace/shared-data"
        - name: WORKSPACE_ENABLED
          value: "true"
        - name: WORKSPACE_SCRIPTS_PATH
          value: "/opt/workspace-scripts"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /agent-card
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /agent-card
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /opt/app-root/src/config
        - name: shared-workspace
          mountPath: /workspace/shared-data
        - name: coordination-scripts
          mountPath: /opt/workspace-scripts
      volumes:
      - name: config-volume
        configMap:
          name: workshop-system-config
      - name: shared-workspace
        persistentVolumeClaim:
          claimName: shared-workspace-storage
      - name: coordination-scripts
        configMap:
          name: workspace-coordination-scripts
          defaultMode: 0755

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: source-manager-agent
  namespace: workshop-system
  labels:
    app: source-manager-agent
    component: workshop-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: source-manager-agent
  template:
    metadata:
      labels:
        app: source-manager-agent
        component: workshop-agent
    spec:
      serviceAccountName: workshop-system-sa
      containers:
      - name: source-manager-agent
        image: image-registry.openshift-image-registry.svc:5000/workshop-system/workshop-agent-system:latest
        command: ["python", "-m", "demos.workshop_template_system", "--agent-name", "source_manager", "--port", "8080"]
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: AGENT_NAME
          value: "source_manager"
        - name: AGENT_PORT
          value: "8080"
        - name: LLAMA_STACK_ENDPOINT
          value: "http://llamastack-server.llama-serve.svc.cluster.local:8321"
        - name: INFERENCE_MODEL_ID
          value: "meta-llama/Llama-3.2-3B-Instruct"
        - name: GITEA_ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: gitea-credentials
              key: GITEA_TOKEN
        # Gitea Configuration from ConfigMap
        - name: GITEA_URL
          valueFrom:
            configMapKeyRef:
              name: gitea-config
              key: GITEA_URL
        - name: GITEA_API_URL
          valueFrom:
            configMapKeyRef:
              name: gitea-config
              key: GITEA_API_URL
        - name: GITEA_ORGANIZATION
          valueFrom:
            configMapKeyRef:
              name: gitea-config
              key: GITEA_ORGANIZATION
        - name: GITEA_USERNAME
          valueFrom:
            configMapKeyRef:
              name: gitea-config
              key: GITEA_USERNAME
        - name: GITEA_USER
          valueFrom:
            configMapKeyRef:
              name: gitea-config
              key: GITEA_USERNAME
        # Additional Gitea Credentials
        - name: GITEA_TOKEN
          valueFrom:
            secretKeyRef:
              name: gitea-credentials
              key: GITEA_TOKEN
        - name: WORKSPACE_PATH
          value: "/workspace/shared-data"
        - name: WORKSPACE_ENABLED
          value: "true"
        - name: WORKSPACE_SCRIPTS_PATH
          value: "/opt/workspace-scripts"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /agent-card
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /agent-card
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /opt/app-root/src/config
        - name: shared-workspace
          mountPath: /workspace/shared-data
        - name: coordination-scripts
          mountPath: /opt/workspace-scripts
      volumes:
      - name: config-volume
        configMap:
          name: workshop-system-config
      - name: shared-workspace
        persistentVolumeClaim:
          claimName: shared-workspace-storage
      - name: coordination-scripts
        configMap:
          name: workspace-coordination-scripts
          defaultMode: 0755

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: research-validation-agent
  namespace: workshop-system
  labels:
    app: research-validation-agent
    component: workshop-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: research-validation-agent
  template:
    metadata:
      labels:
        app: research-validation-agent
        component: workshop-agent
    spec:
      serviceAccountName: workshop-system-sa
      containers:
      - name: research-validation-agent
        image: image-registry.openshift-image-registry.svc:5000/workshop-system/workshop-agent-system:latest
        command: ["python", "-m", "demos.workshop_template_system", "--agent-name", "research_validation", "--port", "8080"]
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: AGENT_NAME
          value: "research_validation"
        - name: AGENT_PORT
          value: "8080"
        - name: LLAMA_STACK_ENDPOINT
          value: "http://llamastack-server.llama-serve.svc.cluster.local:8321"
        - name: INFERENCE_MODEL_ID
          value: "meta-llama/Llama-3.2-3B-Instruct"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /agent-card
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /agent-card
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /opt/app-root/src/config
      volumes:
      - name: config-volume
        configMap:
          name: workshop-system-config

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: documentation-pipeline-agent
  namespace: workshop-system
  labels:
    app: documentation-pipeline-agent
    component: workshop-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: documentation-pipeline-agent
  template:
    metadata:
      labels:
        app: documentation-pipeline-agent
        component: workshop-agent
    spec:
      serviceAccountName: workshop-system-sa
      containers:
      - name: documentation-pipeline-agent
        image: image-registry.openshift-image-registry.svc:5000/workshop-system/workshop-agent-system:latest
        command: ["python", "-m", "demos.workshop_template_system", "--agent-name", "documentation_pipeline", "--port", "8080"]
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: AGENT_NAME
          value: "documentation_pipeline"
        - name: AGENT_PORT
          value: "8080"
        - name: LLAMA_STACK_ENDPOINT
          value: "http://llamastack-server.llama-serve.svc.cluster.local:8321"
        - name: INFERENCE_MODEL_ID
          value: "meta-llama/Llama-3.2-3B-Instruct"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1"
        livenessProbe:
          httpGet:
            path: /agent-card
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /agent-card
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: config-volume
          mountPath: /opt/app-root/src/config
      volumes:
      - name: config-volume
        configMap:
          name: workshop-system-config
