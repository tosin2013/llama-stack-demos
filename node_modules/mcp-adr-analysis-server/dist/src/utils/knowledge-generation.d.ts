/**
 * Knowledge Generation Utility Module - 100% Prompt-Driven Architecture
 * Generates AI delegation prompts for domain-specific architectural knowledge
 * All functions return prompts for AI execution, never execute operations directly
 */
import { ArchitecturalDomain, KnowledgeGenerationConfig, ArchitecturalContext, ProjectContext } from '../types/knowledge-generation.js';
import { PromptObject } from './prompt-composition.js';
/**
 * Generate AI delegation prompt for architectural knowledge generation
 * Returns prompts for AI to generate domain-specific knowledge
 */
export declare function generateArchitecturalKnowledge(context: ArchitecturalContext, config?: KnowledgeGenerationConfig): Promise<{
    prompt: string;
    instructions: string;
    context: any;
}>;
/**
 * Generate prompt for enhancing an existing prompt with domain-specific knowledge
 * Returns AI delegation prompt for knowledge-enhanced prompt creation
 */
export declare function enhancePromptWithKnowledge(originalPrompt: PromptObject, domains: ArchitecturalDomain[], context?: ArchitecturalContext, config?: KnowledgeGenerationConfig): Promise<{
    prompt: string;
    instructions: string;
    context: any;
}>;
/**
 * Generate prompt for detecting architectural domains from project context
 * Returns AI delegation prompt for domain detection
 */
export declare function detectArchitecturalDomains(projectContext: ProjectContext): Promise<{
    prompt: string;
    instructions: string;
    context: any;
}>;
/**
 * Generate cache key for knowledge generation requests
 */
export declare function generateKnowledgeCacheKey(domains: ArchitecturalDomain[], context: ArchitecturalContext, config: KnowledgeGenerationConfig): string;
/**
 * Get available domain templates information for prompt generation
 */
export declare function getAvailableDomainsInfo(): Array<{
    domain: ArchitecturalDomain;
    hasTemplate: boolean;
    categoryCount: number;
}>;
/**
 * Validate knowledge generation inputs
 */
export declare function validateKnowledgeGenerationInputs(context: ArchitecturalContext, config: KnowledgeGenerationConfig): void;
/**
 * Get default knowledge generation configuration
 */
export declare function getDefaultKnowledgeConfig(): Required<KnowledgeGenerationConfig>;
/**
 * Check if a domain has an available template
 */
export declare function isDomainSupported(domain: ArchitecturalDomain): boolean;
/**
 * Get supported architectural domains
 */
export declare function getSupportedDomains(): ArchitecturalDomain[];
/**
 * Get supported knowledge depths
 */
export declare function getSupportedDepths(): Array<'basic' | 'intermediate' | 'advanced'>;
/**
 * Validate knowledge generation configuration
 */
export declare function validateKnowledgeConfig(config: Partial<KnowledgeGenerationConfig>): void;
/**
 * Create domain-specific knowledge configuration
 */
export declare function createDomainKnowledgeConfig(domain: ArchitecturalDomain): KnowledgeGenerationConfig;
/**
 * Generate domain-specific knowledge
 */
export declare function generateDomainKnowledge(domain: ArchitecturalDomain, depth: 'basic' | 'intermediate' | 'advanced'): Promise<any>;
//# sourceMappingURL=knowledge-generation.d.ts.map