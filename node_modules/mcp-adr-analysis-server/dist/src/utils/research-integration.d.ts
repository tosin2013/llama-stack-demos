/**
 * Research integration utilities using prompt-driven AI analysis
 * Implements intelligent research findings incorporation into ADRs
 */
export interface ResearchFile {
    filename: string;
    content: string;
    lastModified: string;
    size: number;
    path: string;
}
export interface ResearchTopic {
    id: string;
    title: string;
    category: string;
    description: string;
    sourceFiles: string[];
    keyFindings: string[];
    evidence: string[];
    confidence: number;
    relevanceScore: number;
    lastUpdated: string;
    tags: string[];
}
export interface ResearchInsight {
    insight: string;
    impact: 'low' | 'medium' | 'high' | 'critical';
    category: string;
    supportingTopics: string[];
    actionRequired: boolean;
    urgency: 'low' | 'medium' | 'high' | 'critical';
}
export interface AdrImpactAnalysis {
    adrId: string;
    adrTitle: string;
    impactLevel: 'none' | 'low' | 'medium' | 'high' | 'critical';
    impactType: string;
    affectedSections: string[];
    relatedTopics: string[];
    findings: string[];
    recommendedAction: 'no_action' | 'review' | 'update' | 'deprecate' | 'supersede';
    urgency: 'low' | 'medium' | 'high' | 'critical';
    confidence: number;
    reasoning: string;
}
/**
 * Monitor research directory for files
 */
export declare function monitorResearchDirectory(researchPath?: string): Promise<{
    monitoringPrompt: string;
    instructions: string;
}>;
/**
 * Extract research topics from files
 */
export declare function extractResearchTopics(researchPath?: string, existingTopics?: string[]): Promise<{
    extractionPrompt: string;
    instructions: string;
}>;
/**
 * Evaluate research impact on existing ADRs
 */
export declare function evaluateResearchImpact(researchTopics: ResearchTopic[], adrDirectory?: string): Promise<{
    evaluationPrompt: string;
    instructions: string;
}>;
/**
 * Generate ADR update suggestions
 */
export declare function generateAdrUpdateSuggestions(adrId: string, researchFindings: Array<{
    finding: string;
    evidence: string[];
    impact: string;
}>, updateType: 'content' | 'status' | 'consequences' | 'alternatives' | 'deprecation', adrDirectory?: string): Promise<{
    updatePrompt: string;
    instructions: string;
}>;
/**
 * Create research file template
 */
export declare function createResearchTemplate(title: string, category?: string): string;
/**
 * Prompt for action confirmation before generating drafts
 */
export declare function promptForActionConfirmation(action: string, details: string, impact: 'low' | 'medium' | 'high' | 'critical'): {
    confirmationPrompt: string;
    instructions: string;
};
//# sourceMappingURL=research-integration.d.ts.map