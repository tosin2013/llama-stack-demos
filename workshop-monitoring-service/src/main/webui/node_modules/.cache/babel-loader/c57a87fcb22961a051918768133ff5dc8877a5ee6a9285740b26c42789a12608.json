{"ast":null,"code":"import _objectSpread from\"/home/ec2-user/llama-stack-demos/workshop-monitoring-service/src/main/webui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/home/ec2-user/llama-stack-demos/workshop-monitoring-service/src/main/webui/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";const _excluded=[\"children\",\"variant\",\"size\",\"className\"],_excluded2=[\"status\",\"className\"],_excluded3=[\"count\",\"maxCount\",\"className\"];import React from'react';/**\n * Badge UI Component\n * Provides consistent badge styling following ADR-0004 design patterns\n */import{jsx as _jsx}from\"react/jsx-runtime\";const badgeVariants={default:'bg-blue-100 text-blue-800 border-blue-200',secondary:'bg-gray-100 text-gray-800 border-gray-200',success:'bg-green-100 text-green-800 border-green-200',warning:'bg-yellow-100 text-yellow-800 border-yellow-200',danger:'bg-red-100 text-red-800 border-red-200',outline:'bg-transparent text-gray-700 border-gray-300'};const badgeSizes={sm:'px-2 py-0.5 text-xs',md:'px-2.5 py-0.5 text-sm',lg:'px-3 py-1 text-sm'};/**\n * Badge Component\n */export const Badge=_ref=>{let{children,variant='default',size='md',className=\"\"}=_ref,props=_objectWithoutProperties(_ref,_excluded);const variantClasses=badgeVariants[variant]||badgeVariants.default;const sizeClasses=badgeSizes[size]||badgeSizes.md;return/*#__PURE__*/_jsx(\"span\",_objectSpread(_objectSpread({className:\"inline-flex items-center rounded-full border font-medium \".concat(variantClasses,\" \").concat(sizeClasses,\" \").concat(className)},props),{},{children:children}));};/**\n * Status Badge - Specialized badge for status indicators\n */export const StatusBadge=_ref2=>{let{status,className=\"\"}=_ref2,props=_objectWithoutProperties(_ref2,_excluded2);const getStatusVariant=status=>{switch(status===null||status===void 0?void 0:status.toLowerCase()){case'healthy':case'completed':case'success':case'approved':return'success';case'degraded':case'warning':case'pending':return'warning';case'unhealthy':case'failed':case'error':case'rejected':return'danger';case'unknown':case'inactive':return'secondary';default:return'default';}};return/*#__PURE__*/_jsx(Badge,_objectSpread(_objectSpread({variant:getStatusVariant(status),className:className},props),{},{children:status}));};/**\n * Count Badge - Badge with numeric count\n */export const CountBadge=_ref3=>{let{count,maxCount=99,className=\"\"}=_ref3,props=_objectWithoutProperties(_ref3,_excluded3);const displayCount=count>maxCount?\"\".concat(maxCount,\"+\"):count;return/*#__PURE__*/_jsx(Badge,_objectSpread(_objectSpread({variant:\"default\",size:\"sm\",className:\"\".concat(className)},props),{},{children:displayCount}));};export default Badge;","map":{"version":3,"names":["React","jsx","_jsx","badgeVariants","default","secondary","success","warning","danger","outline","badgeSizes","sm","md","lg","Badge","_ref","children","variant","size","className","props","_objectWithoutProperties","_excluded","variantClasses","sizeClasses","_objectSpread","concat","StatusBadge","_ref2","status","_excluded2","getStatusVariant","toLowerCase","CountBadge","_ref3","count","maxCount","_excluded3","displayCount"],"sources":["/home/ec2-user/llama-stack-demos/workshop-monitoring-service/src/main/webui/src/components/ui/badge.js"],"sourcesContent":["import React from 'react';\n\n/**\n * Badge UI Component\n * Provides consistent badge styling following ADR-0004 design patterns\n */\n\nconst badgeVariants = {\n  default: 'bg-blue-100 text-blue-800 border-blue-200',\n  secondary: 'bg-gray-100 text-gray-800 border-gray-200',\n  success: 'bg-green-100 text-green-800 border-green-200',\n  warning: 'bg-yellow-100 text-yellow-800 border-yellow-200',\n  danger: 'bg-red-100 text-red-800 border-red-200',\n  outline: 'bg-transparent text-gray-700 border-gray-300'\n};\n\nconst badgeSizes = {\n  sm: 'px-2 py-0.5 text-xs',\n  md: 'px-2.5 py-0.5 text-sm',\n  lg: 'px-3 py-1 text-sm'\n};\n\n/**\n * Badge Component\n */\nexport const Badge = ({ \n  children, \n  variant = 'default', \n  size = 'md',\n  className = \"\", \n  ...props \n}) => {\n  const variantClasses = badgeVariants[variant] || badgeVariants.default;\n  const sizeClasses = badgeSizes[size] || badgeSizes.md;\n\n  return (\n    <span \n      className={`inline-flex items-center rounded-full border font-medium ${variantClasses} ${sizeClasses} ${className}`}\n      {...props}\n    >\n      {children}\n    </span>\n  );\n};\n\n/**\n * Status Badge - Specialized badge for status indicators\n */\nexport const StatusBadge = ({ status, className = \"\", ...props }) => {\n  const getStatusVariant = (status) => {\n    switch (status?.toLowerCase()) {\n      case 'healthy':\n      case 'completed':\n      case 'success':\n      case 'approved':\n        return 'success';\n      case 'degraded':\n      case 'warning':\n      case 'pending':\n        return 'warning';\n      case 'unhealthy':\n      case 'failed':\n      case 'error':\n      case 'rejected':\n        return 'danger';\n      case 'unknown':\n      case 'inactive':\n        return 'secondary';\n      default:\n        return 'default';\n    }\n  };\n\n  return (\n    <Badge \n      variant={getStatusVariant(status)} \n      className={className}\n      {...props}\n    >\n      {status}\n    </Badge>\n  );\n};\n\n/**\n * Count Badge - Badge with numeric count\n */\nexport const CountBadge = ({ count, maxCount = 99, className = \"\", ...props }) => {\n  const displayCount = count > maxCount ? `${maxCount}+` : count;\n  \n  return (\n    <Badge \n      variant=\"default\" \n      size=\"sm\"\n      className={`${className}`}\n      {...props}\n    >\n      {displayCount}\n    </Badge>\n  );\n};\n\nexport default Badge;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}